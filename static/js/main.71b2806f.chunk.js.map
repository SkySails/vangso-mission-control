{"version":3,"sources":["../external \"Cesium\"","lib/aprs/tools.ts","lib/glidertracker/client.ts","context/aircraftContext.tsx","components/Aircraft.tsx","components/AircraftList.tsx","components/Statistics/index.tsx","hooks/usePrevious.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Cesium","getGlider","message","glider","call","receiver","id","source","symbol","lat","lon","altitude","heading","speed","climbrate","rotation","signal","errors","timestamp","callResult","match","rxResult","idResult","tsResult","DateTime","fromFormat","toMillis","addLat","addLon","ltlonResult","latResult","ddmm2deg","string","result","isNorth","lonResult","isEast","altResult","parseInt","hsResult","vsResult","rotResult","parseFloat","dbResult","errResult","flags","substr","getSymbolFromId","getSourceFromId","isNaN","console","log","degree","Math","floor","GliderTrackerClient","options","onClose","onTrack","onReport","onCall","ws","listeners","queryCalls","this","WebSocket","onclose","onmessage","event","handleMessage","data","Promise","resolve","onopen","send","length","query","shift","setTimeout","sendQueue","close","bbox","minX","minY","maxX","maxY","from","to","round","fn","search","isTrackUpdate","parts","split","slice","fixes","filter","Boolean","map","str","alt","time","Date","parse","isGlider","report","isCallUpdate","newCall","cn","type","getNewCall","isLastSeen","isPing","client","AircraftContext","createContext","undefined","connect","then","setView","AircraftProvider","children","useState","item","localStorage","getItem","JSON","e","aircraft","setAircraft","setAircraftWithId","info","lookupGlider","setItem","stringify","Provider","value","useAircrafts","useContext","Tracked","cartesianPosition","Cartesian3","fromDegrees","h","CMath","toRadians","hpr","HeadingPitchRoll","or","ConstantProperty","Transforms","headingPitchRollQuaternion","model","uri","scale","maximumScale","minimumPixelSize","position","orientation","label","LabelGraphics","text","pixelOffset","Cartesian2","fillColor","Color","outlineColor","WHITE","outlineWidth","style","LabelStyle","FILL_AND_OUTLINE","verticalOrigin","VerticalOrigin","BOTTOM","AircraftList","Object","entries","Statistics","sortedField","setSortedField","sortOrder","setSortOrder","sortedAircraft","values","sort","a","b","onSort","field","padding","onClick","onAnimationEnd","currentTarget","classList","remove","Cell","toFixed","previousValue","ref","useRef","useEffect","current","usePrevious","animationName","animationFillMode","animationDuration","DEFAULT_LOCATION","App","display","height","flex","terrainProvider","createWorldTerrain","extend","viewerCesiumInspectorMixin","shouldAnimate","url","IonResource","fromAssetId","duration","destination","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71b2806f.chunk.js","sourcesContent":["module.exports = Cesium;","import { DateTime } from \"luxon\";\n\nexport function isSrvState(message: string) {\n  if (message.search(\"STATE:\") !== -1) return true;\n  else return false;\n}\nexport function isCallUpdate(message: string) {\n  if (message.search(\"CALL:\") !== -1) return true;\n  else return false;\n}\nexport function isTrackUpdate(message: string) {\n  if (message.search(\"TRACK:\") !== -1) return true;\n  else return false;\n}\nexport function isRxUpdate(message: string) {\n  if (message.search(\"RX:\") !== -1) return true;\n  else return false;\n}\nexport function isLastSeen(message: string) {\n  if (message.search(\"SEEN:\") !== -1) return true;\n  else return false;\n}\nexport function isReloadPage(message: string) {\n  if (message.search(\"RELOAD:\") !== -1) return true;\n  else return false;\n}\nexport function isSearchResult(message: string) {\n  if (message.search(\"SEARCH:\") !== -1) return true;\n  else return false;\n}\nexport function isError(message: string) {\n  if (message.search(\"ERROR:\") !== -1) return true;\n  else return false;\n}\nexport function isChatMsg(message: string) {\n  if (message.search(\"MESSAGE:\") !== -1) return true;\n  else return false;\n}\nexport function isPing(message: string) {\n  if (message.search(\"PING?!?\") !== -1) return true;\n  else return false;\n}\n\nexport function isAPRS(message: string) {\n  if (\n    message.search(\">OGFLR,qA\") !== -1 ||\n    message.search(\">APRS,qA\") !== -1 ||\n    message.search(\">APRS,TCPIP*\") !== -1 ||\n    message.search(\">APRS,RELAY*\") !== -1 ||\n    message.search(\">OGNFNT,qA\") !== -1 ||\n    message.search(\">OGNTRK,qA\") !== -1\n  )\n    return true;\n  else return false;\n}\nexport function isGlider(message: string) {\n  if (\n    (message.search(\">OGFLR,qAS\") !== -1 ||\n      message.search(\">APRS,qAS\") !== -1 ||\n      message.search(\">APRS,RELAY*\") !== -1 ||\n      message.search(\">OGNFNT,qAS\") !== -1 ||\n      message.search(\">OGNTRK,qAS\") !== -1) &&\n    message.search(\" id\") !== -1\n  )\n    return true;\n  else return false;\n}\nexport function isRX(message: string) {\n  if (message.search(\">APRS,TCPIP\") !== -1) return true;\n  else return false;\n}\n\nexport function getGlider(message: string) {\n  var glider = {\n    call: \"\",\n    receiver: \"\",\n    id: \"\",\n    source: 0,\n    symbol: 0,\n    lat: 0.0,\n    lon: 0.0,\n    altitude: 0.0,\n    heading: 0.0,\n    speed: 0.0,\n    climbrate: 0.0,\n    rotation: 0,\n    signal: 0.0,\n    errors: 0,\n    timestamp: 0,\n  };\n  // call\n  var callResult = message.match(/([^>]+)/);\n  if (callResult != null) {\n    glider.call = callResult[1];\n  }\n\n  // Receiver\n  var rxResult = message.match(/(?:,)([a-zA-Z0-9]+)(?::\\/)/);\n  if (rxResult != null) {\n    glider.receiver = rxResult[1];\n  }\n\n  // id\n  var idResult = message.match(/(?: id)([a-fA-f0-9]+)/);\n  if (idResult != null) {\n    glider.id = idResult[1];\n  }\n\n  // timestamp\n  var tsResult = message.match(/(?:\\/)(\\d+)(?:h)/);\n  if (tsResult != null) {\n    glider.timestamp = DateTime.fromFormat(tsResult[1], \"HHmmss\").toMillis();\n  }\n\n  //try to decode additional accuracy\n  var addLat = \"0\";\n  var addLon = \"0\";\n  var ltlonResult = message.match(/(?: !W)(\\d)(\\d)(?:!)/);\n  if (ltlonResult != null) {\n    addLat = ltlonResult[1];\n    addLon = ltlonResult[2];\n  }\n\n  // lat\n  var latResult = message.match(/(?:h)(\\d+\\.\\d+)(?:[NS])/);\n  if (latResult != null) {\n    glider.lat = ddmm2deg(latResult[1] + addLat);\n  }\n  if (!isNorth(message)) {\n    glider.lat *= -1;\n  }\n\n  // lon\n  var lonResult = message.match(/(?:[NS].)(\\d+\\.\\d+)(?:[EW])/);\n  if (lonResult != null) {\n    glider.lon = ddmm2deg(lonResult[1] + addLon);\n  }\n  if (!isEast(message)) {\n    glider.lon *= -1;\n  }\n\n  // altitude\n  var altResult = message.match(/(?:\\/A=)(\\d+)/);\n  if (altResult != null) {\n    glider.altitude = parseInt(altResult[1]);\n  }\n\n  // heading and speed\n  var hsResult = message.match(/(\\d+)(?:\\/)(\\d+)(?:\\/)/);\n  if (hsResult != null) {\n    glider.heading = parseInt(hsResult[1]);\n    glider.speed = parseInt(hsResult[2]);\n  }\n\n  // climbrate\n  var vsResult = message.match(/(?: )([+-]\\d+)(?:fpm)/);\n  if (vsResult != null) {\n    glider.climbrate = parseInt(vsResult[1]);\n  }\n\n  // rotation\n  var rotResult = message.match(/(?: )([+-]\\d+\\.\\d+)(?:rot)/);\n  if (rotResult != null) {\n    glider.rotation = parseFloat(rotResult[1]);\n  }\n\n  // signal strength\n  var dbResult = message.match(/(?: )(\\d+\\.\\d+)(?:dB)/);\n  if (dbResult != null) {\n    glider.signal = parseFloat(dbResult[1]);\n  }\n\n  // error\n  var errResult = message.match(/(?: )(\\d+)(?:e)/);\n  if (errResult != null) {\n    glider.errors = parseInt(errResult[1]);\n  }\n\n  /* symbol\n  var result = message.match(/(?:\\d+\\.\\d+[NS])(.)(?:\\d+\\.\\d+[EW])(.)/);\n  if(result != null){\n    glider.symbol = result[1] + result[2];\n  }*/\n\n  // symbol\n  glider.symbol = getSymbolFromId(glider.id);\n  glider.source = getSourceFromId(glider.id);\n\n  // frequency drift  (?: )([\\+\\-]\\d+\\.\\d+)(?:kHz)\n\n  // gps accuracy     (?: gps)(\\d+x\\d+)\n\n  if (\n    isNaN(glider.timestamp) ||\n    isNaN(glider.lon) ||\n    isNaN(glider.lat) ||\n    isNaN(glider.altitude) ||\n    isNaN(glider.heading) ||\n    isNaN(glider.speed) ||\n    isNaN(glider.climbrate) ||\n    isNaN(glider.rotation)\n  ) {\n    //|| (glider.id==\"0ADDB117\") || (glider.id==\"1D4B05CA\") ){\n    console.log(glider);\n    console.log(message);\n    console.log(\"-----------------------\");\n  }\n\n  return glider;\n}\n\nexport function getNewCall(message: string) {\n  var newCall = { id: \"\", call: \"\", cn: \"\", type: \"\" };\n  //CALL:0AB345/D-KTCJ|\n  // user\n  //var result = message.match(/(?:CALL\\:)([a-fA-f0-9]+)(?:\\/)([^\\[]+)(?:\\[)([0-9a-zA-Z]*)(?:\\])([^|]*)/);\n  var result = message.match(\n    /(?:CALL:)([^/]+)(?:\\/)([^[]+)(?:\\[)([^\\]]*)(?:\\])([^|]*)/\n  );\n  if (result != null) {\n    newCall.id = result[1];\n    newCall.call = result[2];\n    newCall.cn = result[3];\n    newCall.type = result[4];\n  }\n  //console.log(newCall);\n  return newCall;\n}\n\nfunction ddmm2deg(message: string) {\n  var degree = Math.floor(parseInt(message) / 100);\n  var minute = parseFloat(message) - degree * 100;\n  return degree + minute / 60;\n}\n\nfunction isNorth(string: string) {\n  var result = string.match(/(?::\\/\\d+[h]\\d+[.]\\d+)(.)/);\n  if (result == null) return null;\n  if (result[1] === \"N\") return true;\n  else return false;\n}\n\nfunction isEast(string: string) {\n  var result = string.match(/(?::\\/\\d+[h]\\d+[.]\\d+[NS].\\d+[.]\\d+)(.)/);\n  if (result == null) return null;\n  if (result[1] === \"E\") return true;\n  else return false;\n}\n\nexport function getSymbolFromId(id: string) {\n  var flags = parseInt(id.substr(0, 2), 16);\n  flags = (flags >> 2) & 0x0f;\n  return flags;\n}\n\nexport function getSourceFromId(id: string) {\n  var flags = parseInt(id.substr(0, 2), 16);\n  flags = flags & 0x03;\n  return flags;\n}\n","import { BBox } from \"cheap-ruler\";\nimport {\n  isGlider,\n  getGlider,\n  isTrackUpdate,\n  isLastSeen,\n  isPing,\n  isCallUpdate,\n  getNewCall,\n} from \"../aprs/tools\";\n\nexport default class GliderTrackerClient {\n  onClose: (() => void) | undefined;\n  onTrack: ((id: string, fixes: any[]) => void) | undefined;\n  onReport: ((report: Report) => void) | undefined;\n  onCall: ((call: Call) => void) | undefined;\n\n  private ws: any;\n  private readonly options: GliderTrackerClientOptions;\n  private listeners: AircraftListeners = {};\n  private queryCalls: string[] = [];\n\n  constructor(options: GliderTrackerClientOptions) {\n    this.options = options;\n  }\n\n  connect() {\n    this.ws = new this.options.WebSocket(\"ws://glidertracker.de:3389/\");\n\n    this.ws.onclose = () => {\n      this.ws = null;\n      if (this.onClose) this.onClose();\n    };\n\n    this.ws.onmessage = (event: any) => {\n      this.handleMessage(event.data);\n    };\n\n    return new Promise((resolve) => {\n      this.ws.onopen = resolve;\n    });\n  }\n\n  send(message: string) {\n    if (this.ws) {\n      this.ws.send(message);\n    }\n  }\n\n  sendQueue() {\n    if (this.queryCalls.length > 0) {\n      const query = this.queryCalls.shift() as string;\n      this.send(query);\n      setTimeout(() => {\n        this.sendQueue();\n      }, 333);\n    }\n  }\n\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n\n  setView(bbox: BBox) {\n    let [minX, minY, maxX, maxY] = bbox;\n    this.send(`VIEW:${minX}|${minY}|${maxX}|${maxY}`);\n  }\n\n  getOverview(bbox: BBox) {\n    let [minX, minY, maxX, maxY] = bbox;\n    this.send(`OVERVIEW?0${minX}|${minY}|${maxX}|${maxY}`);\n  }\n\n  requestTrack(id: string, from: number, to: number) {\n    this.send(\n      `TRACK?${id}|${Math.round(from / 1000)}|${Math.round(to / 1000)}`\n    );\n  }\n\n  addListenerForId(id: string, fn: (report: Report) => void) {\n    this.listeners[id] = fn;\n    return () => {\n      delete this.listeners[id];\n    };\n  }\n\n  lookupGlider(id: string, call: string) {\n    this.send(\"CALL?\" + id + \"/\" + call + \"|\");\n  }\n\n  private handleMessage(message: string) {\n    if (isTrackUpdate(message) && this.onTrack) {\n      let parts = message.split(\"|\");\n      let id = parts.shift()!.slice(6);\n      let fixes = parts.filter(Boolean).map((str) => {\n        let parts = str.split(\"/\");\n        let lat = parseFloat(parts[0]);\n        let lon = parseFloat(parts[1]);\n        let alt = parseFloat(parts[2]);\n        let time = Date.parse(parts[3]);\n        return { lat, lon, alt, time };\n      });\n\n      this.onTrack(id, fixes);\n    } else if (isGlider(message)) {\n      let report = getGlider(message);\n      this.listeners[report.id] && this.listeners[report.id](report);\n      this.onReport && this.onReport(report);\n    } else if (isCallUpdate(message)) {\n      const call = getNewCall(message);\n      // console.info(\"Recieved call:\", call);\n      this.onCall && this.onCall(call);\n    } else if (isLastSeen(message)) {\n      // console.log(message);\n    } else if (isPing(message)) {\n      this.send(\"PONG!?!\");\n    }\n  }\n}\n","import { createContext, useContext, useState } from \"react\";\nimport GliderTrackerClient from \"../lib/glidertracker/client\";\nconst client = new GliderTrackerClient({ WebSocket });\n\nexport type Aircraft = Report & Call;\n\ntype AircraftList = {\n  [id: string]: Aircraft;\n};\n\nexport interface AircraftContextType {\n  aircraft: AircraftList;\n  setAircraftWithId: (id: string, report: any) => void;\n  client: GliderTrackerClient;\n}\n\nexport const AircraftContext = createContext<AircraftContextType>(undefined!);\n\nfunction connect() {\n  client.connect().then(() => {\n    client.setView([14.898834, 59.130863, 17.512207, 59.834465]);\n\n    console.log(\"Connection established.\");\n\n    // client.getOverview([13.29071, 58.645511, 18.517456, 60.057987]); // Get current situation\n    // client.requestTrack(\"06DDDAC1\", 1618745182238, Date.now()); // Get track of aircraft\n  });\n}\n\nconnect();\n\nclient.onClose = function () {\n  console.log(\"Connection closed. Trying again!\");\n  connect();\n};\n\nexport default function AircraftProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [aircraft, setAircraft] = useState<AircraftList>(() => {\n    try {\n      const item = localStorage.getItem(\"aircraft\");\n      return item ? JSON.parse(item) : {};\n    } catch (e) {\n      return {};\n    }\n  });\n\n  const setAircraftWithId = (id: string, report: any) => {\n    setAircraft({\n      ...aircraft,\n      [id]: {\n        ...aircraft[id],\n        ...report,\n      },\n    });\n  };\n\n  client.onReport = (report) => {\n    if (!aircraft[report.id]) {\n      // Aircraft not registered, send CALL req on websocket to get information\n      console.info(\n        \"Missing data for aircraft with id:\" + report.id + \". Sending lookup!\"\n      );\n      client.lookupGlider(report.id, report.call);\n    } else {\n      setAircraftWithId(report.id, report);\n    }\n  };\n\n  client.onCall = (data) => {\n    const { id, call, cn, type } = data;\n    setAircraftWithId(id, data);\n    localStorage.setItem(\n      \"aircraft\",\n      JSON.stringify({\n        ...JSON.parse(localStorage.getItem(\"aircraft\") || \"{}\"),\n        [id]: {\n          id,\n          call,\n          cn,\n          type,\n        },\n      })\n    );\n  };\n\n  return (\n    <AircraftContext.Provider\n      value={{\n        setAircraftWithId,\n        aircraft,\n        client,\n      }}\n    >\n      {children}\n    </AircraftContext.Provider>\n  );\n}\n\nexport function useAircrafts(): AircraftContextType {\n  return useContext(AircraftContext);\n}\n","import {\n  Cartesian3,\n  Color,\n  ConstantProperty,\n  HeadingPitchRoll,\n  LabelGraphics,\n  Math as CMath,\n  Transforms,\n} from \"cesium\";\nimport Cartesian2 from \"cesium/Source/Core/Cartesian2\";\nimport LabelStyle from \"cesium/Source/Scene/LabelStyle\";\nimport VerticalOrigin from \"cesium/Source/Scene/VerticalOrigin\";\n// import { DateTime } from \"luxon\";\nimport React from \"react\";\nimport { Entity } from \"resium\";\nimport { Aircraft } from \"../context/aircraftContext\";\n\n// function log(\n//   time: string,\n//   id: string,\n//   lon: number,\n//   lat: number,\n//   alt: number,\n//   speed?: number\n// ) {\n//   console.log(\n//     time,\n//     id,\n//     lon.toFixed(6),\n//     lat.toFixed(6),\n//     speed ? Math.round(speed) + \"km/h\" : \"??? km/h\",\n//     Math.round(alt) + \"m\"\n//   );\n// }\n\nexport default function Tracked({ data }: { data: Aircraft }) {\n  let [lon, lat, alt, heading] = [\n    data.lon,\n    data.lat,\n    data.altitude,\n    data.heading,\n  ];\n\n  if (typeof lon !== \"number\") return null;\n\n  const cartesianPosition = Cartesian3.fromDegrees(lon, lat, alt + 20);\n\n  const h = CMath.toRadians(heading - 90);\n  const p = 0;\n  const r = 0;\n\n  const hpr = new HeadingPitchRoll(h, p, r);\n\n  const or = new ConstantProperty(\n    Transforms.headingPitchRollQuaternion(\n      Cartesian3.fromDegrees(lon, lat, alt),\n      hpr\n    )\n  );\n\n  return (\n    <Entity\n      model={{\n        uri: \"assets/arcus.glb\",\n        scale: 1,\n        maximumScale: 110,\n        minimumPixelSize: 300,\n      }}\n      position={cartesianPosition}\n      orientation={or}\n      label={\n        new LabelGraphics({\n          text: data.cn,\n          pixelOffset: new Cartesian2(0, -50),\n          // backgroundColor: new Color(0.173, 0.659, 0.961, 1),\n          fillColor: new Color(0.173, 0.659, 0.961, 1),\n          outlineColor: Color.WHITE,\n          outlineWidth: 3,\n          style: LabelStyle.FILL_AND_OUTLINE,\n          verticalOrigin: VerticalOrigin.BOTTOM,\n        })\n      }\n    />\n  );\n}\n","import React from \"react\";\nimport { useAircrafts } from \"../context/aircraftContext\";\nimport Aircraft from \"./Aircraft\";\n\nexport default function AircraftList() {\n  const { aircraft } = useAircrafts();\n\n  return (\n    <>\n      {Object.entries(aircraft).map(([id, data]) => (\n        <Aircraft key={id} data={data} />\n      ))}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useAircrafts } from \"../../context/aircraftContext\";\nimport usePrevious from \"../../hooks/usePrevious\";\n\ntype SortedField = null | \"cn\" | \"speed\" | \"altitude\";\n\nexport default function Statistics() {\n  const [sortedField, setSortedField] = useState<SortedField>(null);\n  const [sortOrder, setSortOrder] = useState<\"asc\" | \"desc\">(\"desc\");\n\n  const { aircraft } = useAircrafts();\n\n  let sortedAircraft = [...Object.values(aircraft)];\n\n  if (sortedField) {\n    sortedAircraft.sort((a, b) => {\n      if (a[sortedField] < b[sortedField]) {\n        return sortOrder === \"desc\" ? 1 : -1;\n      }\n      if (a[sortedField] > b[sortedField]) {\n        return sortOrder === \"desc\" ? -1 : 1;\n      }\n      return 0;\n    });\n  }\n\n  const onSort = (field: SortedField) => {\n    if (sortedField === field) {\n      setSortOrder(sortOrder === \"desc\" ? \"asc\" : \"desc\");\n    } else {\n      setSortedField(field);\n    }\n  };\n\n  return (\n    <aside style={{ padding: \"10px\" }}>\n      <table>\n        <thead>\n          <tr>\n            <th onClick={() => onSort(\"cn\")}>CN</th>\n            <th onClick={() => onSort(\"speed\")}>Speed</th>\n            <th onClick={() => onSort(\"altitude\")}>Altitude</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedAircraft.map((data) => (\n            <tr\n              onAnimationEnd={(e) => e.currentTarget.classList.remove(\"flash\")}\n              key={`${data.id}-${data.cn}-${data.type}`}\n            >\n              <Cell value={data.call} />\n              <Cell value={data.cn} />\n              <Cell value={data.speed} />\n              <Cell value={(data.altitude / 3.281).toFixed(1) as string} />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </aside>\n  );\n}\n\nfunction Cell({ value }: { value: string | number }) {\n  const previousValue = usePrevious(value) || 0;\n  return (\n    <td\n      style={{\n        animationName: previousValue > value ? \"redflash\" : \"greenflash\",\n        animationFillMode: \"forwards\",\n        animationDuration: \"1s\",\n      }}\n    >\n      {value}\n    </td>\n  );\n}\n","import { useEffect, useRef } from \"react\";\n\nexport default function usePrevious(value: any) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}\n","import {\n  Cartesian3,\n  createWorldTerrain,\n  IonResource,\n  viewerCesiumInspectorMixin,\n} from \"cesium\";\nimport React from \"react\";\nimport { CameraFlyTo, Cesium3DTileset, Viewer } from \"resium\";\nimport AircraftList from \"./components/AircraftList\";\nimport Statistics from \"./components/Statistics\";\nimport \"./App.css\";\n\nconst DEFAULT_LOCATION = Cartesian3.fromDegrees(13.32477, 58.312519, 6089);\n\nconst App = () => {\n  return (\n    <main style={{ display: \"flex\", height: \"100vh\" }}>\n      <Statistics />\n      <Viewer\n        style={{ flex: 1 }}\n        terrainProvider={createWorldTerrain()}\n        extend={viewerCesiumInspectorMixin}\n        shouldAnimate={true}\n      >\n        <Cesium3DTileset url={IonResource.fromAssetId(96188)} />\n        <CameraFlyTo duration={0} destination={DEFAULT_LOCATION} />\n        <AircraftList />\n      </Viewer>\n    </main>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AircraftProvider from \"./context/aircraftContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AircraftProvider>\n      <App />\n    </AircraftProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}